@header {
package lab4.pascal;

import lab4.Tree;
}

@main {
BufferedWriter bw = new BufferedWriter(new FileWriter("src/lab4/pascal/pascal.dot"));
result.printTree(0, bw);
bw.flush();
}

start -> Tree   : eo1 ex2 {return new Tree("Ex", eo1.get(0), ex2.get(0));}
                ;

ex2 -> Tree : XOR eo1 ex2 {return new Tree("XOR", new Tree("xor"), eo1.get(0), ex2.get(0));}
            | {return new Tree("Ex\'");}
            ;

eo1 -> Tree : ea1 eo2 {return new Tree("Eo", ea1.get(0), eo2.get(0));}
            ;

eo2 -> Tree : OR ea1 eo2 {return new Tree("OR", new Tree("or"), ea1.get(0), eo2.get(0));}
            | {return new Tree("Eo\'");}
            ;

ea1 -> Tree : t ea2 {return new Tree("Ea", t.get(0), ea2.get(0));}
            ;

ea2 -> Tree : AND t ea2 {return new Tree("AND", new Tree("and"), t.get(0), ea2.get(0));}
            | {return new Tree("Ea\'");}
            ;

t -> Tree   : NOT t {return new Tree("NOT", new Tree("not"), t.get(0));}
            | word[{""}] {return new Tree("TERM", new Tree(word.get(0)));}
            | LPAREN start RPAREN {return new Tree("F", new Tree("("), start.get(0), new Tree(")"));}
            ;

word [String input] -> String
            : TERM word[{input + TERM.get(0)}] {return word.get(0);}
            | {return input;}
            ;

LPAREN  : '('   ;
RPAREN  : ')'   ;
XOR     : 'xor' ;
OR      : 'or'  ;
AND     : 'and' ;
NOT     : 'not' ;
TERM    : 'b' | 'c' | 'd' | 'e' | 'f';
